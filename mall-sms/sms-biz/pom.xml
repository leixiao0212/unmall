<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>mall-sms</artifactId>
        <groupId>com.youlai</groupId>
        <version>1.0.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>

    <artifactId>sms-biz</artifactId>
    <properties>
        <youlai.version>1.0.0-SNAPSHOT</youlai.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>com.youlai</groupId>
            <artifactId>sms-api</artifactId>
            <version>${youlai.version}</version>
        </dependency>

        <dependency>
            <groupId>com.youlai</groupId>
            <artifactId>common-mybatis</artifactId>
            <version>${youlai.version}</version>
        </dependency>

        <dependency>
            <groupId>com.youlai</groupId>
            <artifactId>common-web</artifactId>
            <version>${youlai.version}</version>
        </dependency>

        <dependency>
            <groupId>com.youlai</groupId>
            <artifactId>common-redis</artifactId>
            <version>${youlai.version}</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- nacos 依赖-->
        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba.cloud</groupId>
            <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-configuration-processor</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.spotify</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <!--执行mvn package,即执行 mvn clean package docker:build-->
                    <!--<execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>-->
                </executions>

                <configuration>
                    <!-- 镜像名称 -->
                    <imageName>${project.artifactId}</imageName>
                    <!-- 指定标签 -->
                    <imageTags>
                        <imageTag>latest</imageTag>
                    </imageTags>
                    <!-- 基础镜像-->
                    <baseImage>openjdk:8-jdk-alpine</baseImage>

                    <!-- 切换到容器工作目录-->
                    <workdir>/</workdir>

                    <entryPoint>["java","-jar","${project.build.finalName}.jar"]</entryPoint>

                    <!-- 指定远程 Docker API地址  -->
                    <dockerHost>https://c.youlai.store:2376</dockerHost>
                    <!-- 指定tls证书的目录 -->
                    <dockerCertPath>C:\certs\docker\c.youlai.store</dockerCertPath>

                    <!-- 复制 jar包到docker容器指定目录-->
                    <resources>
                        <resource>
                            <targetPath>/</targetPath>
                            <!-- 用于指定需要复制的根目录，${project.build.directory}表示target目录 -->
                            <directory>${project.build.directory}</directory>
                            <!-- 用于指定需要复制的文件，${project.build.finalName}.jar就是打包后的target目录下的jar包名称　-->
                            <include>${project.build.finalName}.jar</include>
                        </resource>
                    </resources>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
